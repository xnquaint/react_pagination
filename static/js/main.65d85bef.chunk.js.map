{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","currentPagesNumber","Math","ceil","pagesArray","className","cn","disabled","href","onClick","map","page","active","items","App","useState","selectedPage","setSelectedPage","selectedOption","setSelectedOption","firstItemIndex","lastItemIndex","currentItems","slice","id","value","onChange","selectEvent","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YAEI,IADJC,oBACI,MADW,aACX,EACEC,EAAqBC,KAAKC,KAAKN,EAAQC,GACvCM,EAAad,EAAW,EAAGW,GAEjC,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBR,IAA3C,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EAAoB,OAAS,QAC5CU,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAeDK,EAAWM,KAAI,SAAAC,GAAI,OAClB,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASZ,IADhD,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAASZ,GACXC,EAAaW,IANnB,SAUGA,KAZEA,MAiBT,oBAAIN,UACFC,IAAG,YACD,CAAEC,SAAUR,IAAgBE,IAFhC,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAAqB,OAAS,QAC7DQ,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,wBCzDFc,EAAQvB,EAAW,EADJ,IAElBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAUMC,EAAiBF,EAAiBF,GAAgBE,EAAiB,GACnEG,EAAgBL,IAFFd,KAAKC,KAfN,GAe0Be,GAf1B,GAmBfA,EAAiBF,EACfM,EAAeT,EAAMU,MAAMH,EAAiB,EAAGC,GAErD,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWW,EADX,mBACkCI,EADlC,cACsDC,EADtD,eA1Be,GA0Bf,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOP,EACPQ,SA7BiB,SACzBC,GAEAR,EAAkBS,OAAOD,EAAYE,OAAOJ,QAC5CR,EAAgB,IAoBV,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MApDa,GAqDbC,QAASoB,EACTnB,YAAaiB,EACbhB,aAAc,SAACW,GAAD,OAAkBM,EAAgBN,MAElD,6BACGW,EAAaZ,KAAI,SAAAqB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.65d85bef.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => { },\n}) => {\n  const currentPagesNumber = Math.ceil(total / perPage);\n  const pagesArray = getNumbers(1, currentPagesNumber);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesArray.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              if (page !== currentPage) {\n                onPageChange(page);\n              }\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        cn('page-item',\n          { disabled: currentPage === currentPagesNumber })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === currentPagesNumber ? 'true' : 'false'}\n          onClick={() => {\n            if (currentPage !== currentPagesNumber) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst ITEMS_NUMBER = 42;\nconst items = getNumbers(1, ITEMS_NUMBER)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [selectedOption, setSelectedOption] = useState(5);\n\n  const handleSelectChange = (\n    selectEvent: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedOption(Number(selectEvent.target.value));\n    setSelectedPage(1);\n  };\n\n  const pagesNumber = Math.ceil(ITEMS_NUMBER / selectedOption);\n  const firstItemIndex = selectedOption * selectedPage - (selectedOption - 1);\n  const lastItemIndex = selectedPage === pagesNumber\n    ? ITEMS_NUMBER\n    : selectedOption * selectedPage;\n  const currentItems = items.slice(firstItemIndex - 1, lastItemIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstItemIndex} - ${lastItemIndex} of ${ITEMS_NUMBER})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedOption}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={ITEMS_NUMBER}\n        perPage={selectedOption}\n        currentPage={selectedPage}\n        onPageChange={(page: number) => setSelectedPage(page)}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}