{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Buttons","Pagination","total","perPage","currentPage","onPageChange","currentPagesNumber","Math","ceil","pagesArray","isFirstPage","isCurrentPage","page","isLastPage","handleClick","button","LeftArrow","PageButton","RightArrow","className","cn","disabled","href","onClick","map","active","items","App","useState","selectedPage","setSelectedPage","selectedOption","setSelectedOption","firstItemIndex","lastItemIndex","currentItems","slice","id","value","onChange","selectEvent","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec988a9f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nenum Buttons {\n  LeftArrow,\n  PageButton,\n  RightArrow,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => { },\n}) => {\n  const currentPagesNumber = Math.ceil(total / perPage);\n  const pagesArray = getNumbers(1, currentPagesNumber);\n\n  const isFirstPage = () => currentPage === 1;\n  const isCurrentPage = (page: number) => page === currentPage;\n  const isLastPage = () => currentPage === currentPagesNumber;\n\n  function handleClick(button: Buttons, page: number = currentPage) {\n    switch (button) {\n      case Buttons.LeftArrow:\n        return () => {\n          if (!isFirstPage()) {\n            onPageChange(currentPage - 1);\n          }\n        };\n\n      case Buttons.PageButton:\n        return () => {\n          if (!isCurrentPage(page)) {\n            onPageChange(page);\n          }\n        };\n\n      case Buttons.RightArrow:\n        return () => {\n          if (currentPage !== currentPagesNumber) {\n            onPageChange(currentPage + 1);\n          }\n        };\n\n      default:\n        return () => {};\n    }\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage() })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage() ? 'true' : 'false'}\n          onClick={handleClick(Buttons.LeftArrow)}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesArray.map(page => (\n        <li\n          className={cn('page-item', { active: isCurrentPage(page) })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={handleClick(Buttons.PageButton, page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        cn('page-item',\n          { disabled: isLastPage() })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage() ? 'true' : 'false'}\n          onClick={handleClick(Buttons.RightArrow)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst ITEMS_NUMBER = 42;\nconst items = getNumbers(1, ITEMS_NUMBER)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [selectedOption, setSelectedOption] = useState(5);\n\n  const handleSelectChange = (\n    selectEvent: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedOption(Number(selectEvent.target.value));\n    setSelectedPage(1);\n  };\n\n  const pagesNumber = Math.ceil(ITEMS_NUMBER / selectedOption);\n  const firstItemIndex = selectedOption * selectedPage - (selectedOption - 1);\n  const lastItemIndex = selectedPage === pagesNumber\n    ? ITEMS_NUMBER\n    : selectedOption * selectedPage;\n  const currentItems = items.slice(firstItemIndex - 1, lastItemIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstItemIndex} - ${lastItemIndex} of ${ITEMS_NUMBER})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedOption}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={ITEMS_NUMBER}\n        perPage={selectedOption}\n        currentPage={selectedPage}\n        onPageChange={(page: number) => setSelectedPage(page)}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}